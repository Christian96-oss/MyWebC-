@using MYWEB.Models
@using Microsoft.AspNetCore.Http
@{
    Layout = "~/Views/Shared/_LayoutMyLearn.cshtml";
}
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 mt-3">
                <div class="card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between mb-3">
                          <div class="d-flex">
                                <h2 class="text-dark"><i class="nav-icon fas fa-lightbulb"></i> Best</h2>&nbsp;
                              <h2 class="text-dt">Practices</h2>
                                <div class="ml-3 mt-2">
                                    <button class="btn btn-primary btn-sm" onclick="manageStructure()">
                                        <i class="fa fa-tasks"></i> Manage Practices
                                    </button>
                                </div>
                            </div>
                         </div>
                        <div id="carouselExampleControls" class="carousel slide" data-ride="carousel">
                            <div class="carousel-inner">
                                <div class="carousel-item active">
                                    <img src="~/assets/frontend_perform.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/backend_perform.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/codereview_perform.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/api-security.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/uxdesign.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/data_analyst.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/qa.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/software_architect.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/game_developer.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/cyber_security.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/blockchain.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/devrel.jpg" class="w-100">
                                </div>
                                <div class="carousel-item">
                                    <img src="~/assets/ai-data-scientist.jpg" class="w-100">
                                </div>
                            </div>
                            <button class="carousel-control-prev" type="button" data-target="#carouselExampleControls" data-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="sr-only">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-target="#carouselExampleControls" data-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="sr-only">Next</span>
                            </button>
                        </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

<div id="modal_edit" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#3dcd58">
                <h5 class=" text-white"><i class="fa fa-info-circle mr-2"></i>Edit User</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row ml-2 mr-2">
                    <div class="col-6">
                        <div class="card card-outline" id="scan">
                            <div class="row ml-2 mr-2">
                                <div class="col-12">
                                    <div class="form-group">
                                        <label style="font-size:10pt; font-weight:bold;">Sesa ID<span style="color: red; font-weight:bold;">*</span></label>
                                        <input type="text" id="sesa_id" class="form-control form-control-sm" />
                                        <input type="text" id="id" class="form-control form-control-sm" hidden />
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-group">
                                        <label style="font-size:10pt; font-weight:bold;">Name<span style="color: red; font-weight:bold;">*</span></label>
                                        <input type="text" id="name" class="form-control form-control-sm" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="card card-outline" id="manual">
                            <div class="row ml-2 mr-2">
                                <div class="col-12">
                                    <div class="form-group">
                                        <label style="font-size:10pt; font-weight:bold;">Plant<span style="color: red; font-weight:bold;">*</span></label>
                                        <select class="form-control form-control-sm text-center" id="select_plant" style="width:100%;"></select>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-group">
                                        <label style="font-size:10pt; font-weight:bold;">Level<span style="color: red; font-weight:bold;">*</span></label>
                                        <select class="form-control form-control-sm text-center" id="select_level" style="width:100%;"></select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <label style="font-size:12pt;"></label>
                        <div class="row d-flex justify-content-center">
                            <div class="col-3 mx-auto">
                                <button class="btn btn-success btn-block" id="btn_lead" onclick="verify_save()"><i class="fas fa-save"></i> Save </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal_add" class="modal fade" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#3dcd58">
                <h5 class=" text-white"><i class="fa fa-info-circle mr-2"></i>Add Map</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row ml-5 mr-5">
                    <div class="col-6">
                        <div class="card card-outline" id="scan">
                            <div class="row ml-2 mr-2">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label style="font-size:10pt; font-weight:bold;">Plant<span style="color: red; font-weight:bold;">*</span></label>
                                        <select class="form-control form-control-sm text-center" id="select_plant2" style="width:100%;"></select>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label style="font-size:10pt; font-weight:bold;">Floor<span style="color: red; font-weight:bold;">*</span></label>
                                        <select class="form-control form-control-sm text-center" id="select_floor2" style="width:100%;"></select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="card card-outline" id="manual">
                            <div class="row ml-2 mr-2">
                            <div class="col-12">
                                    <div class="form-group">
                                        <label style="font-size:10pt; font-weight:bold;">Upload<span style="color: red; font-weight:bold;">*</span></label>
                                <div class="ml-1" id="file_section">
                                            <input type="file" name="file" accept=".jpg, .bmp, .png, .jfif" id="actual-btn" hidden />
                                            <label for="actual-btn" class="actual-btn">Choose file</label>
                                            <span id="file-chosen" style="width:100%;">No file chosen</span>
                                            <button id="reset-btn" class="reset-btn" style="display: none;">Hapus</button>
                                        </div>
                                    </div>
                                </div>    
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <label style="font-size:12pt;"></label>
                        <div class="row d-flex justify-content-center">
                            <div class="col-3 mx-auto">
                                <button class="btn btn-success btn-block" id="create_Data"><i class="fas fa-pen"></i> Submit </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script src="~/lib/adminlte/plugins/chart.js/Chart.min.js"></script>
    <script src="~/lib/adminlte/plugins/chart.js/chartjs-plugin-datalabels@1.1.2.js"></script>
    <script>
        let isSearch = false;
        const actualBtn = document.getElementById('actual-btn');
        const fileChosen = document.getElementById('file-chosen');
        const resetBtn = document.getElementById('reset-btn');

        actualBtn.addEventListener('change', function () {
            fileChosen.textContent = this.files[0].name;
            resetBtn.style.display = 'inline-block'; // Menampilkan tombol "Hapus"
        });

        resetBtn.addEventListener('click', function () {
            actualBtn.value = ''; // Menghapus file yang sudah dipilih
            fileChosen.textContent = 'No file chosen'; // Mengganti teks kembali ke "No file chosen"
            resetBtn.style.display = 'none'; // Sembunyikan tombol "Hapus" lagi
        });
        function toggle(source) {
            checkboxes = document.getElementsByName('foo');
            for (var i = 0, n = checkboxes.length; i < n; i++) {
                checkboxes[i].checked = source.checked;
            }
        }

        $(document).ready(function () {

            $('#select_floor').select2({
                placeholder: 'Select Floor',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetFloorFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term,
                            //sector: 'none'
                        };
                    },
                    processResults: function (data) {
                        //console.log(data);
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#select_floor2').select2({
                placeholder: 'select floor',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetFloorFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term,
                            //sector: 'none'
                        };
                    },
                    processResults: function (data) {
                        //console.log(data);
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#select_level').select2({
                placeholder: 'select level',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetAccessFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term,
                            //sector: 'none'
                        };
                    },
                    processResults: function (data) {
                        //console.log(data);
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#select_apps').select2({
                placeholder: 'select access apps',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetAccessApps")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term
                        };
                    },
                    processResults: function (data) {
                        var submittedData = getSubmittedData(); // Mendapatkan data yang sudah di-submit
                        var results = data.items.map(function (item) {
                            return { id: item.id, text: item.text };
                        });

                        // Tambahkan data yang sudah di-submit ke dalam hasil
                        results.push({ id: submittedData.apps, text: submittedData.apps });

                        return {
                            results: results
                        };
                    },
                }
            });

            // Fungsi untuk mendapatkan data yang sudah di-submit
            function getSubmittedData() {
                // Lakukan Ajax untuk mendapatkan data yang sudah di-submit
                var apps = $('#select_apps').val(); // Ganti dengan cara yang sesuai untuk mendapatkan test_name
                var submittedData;

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetSubmittedAppsData")",
                    data: {
                        apps: apps
                    },
                    async: false,  // Menambahkan opsi async: false agar fungsi ini menunggu hasil request
                    success: function (data) {
                        submittedData = data;
                    }
                });

                return submittedData;
            }

            $('#select_apps2').select2({
                placeholder: 'select access apps',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetAccessApps")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term,
                            //sector: 'none'
                        };
                    },
                    processResults: function (data) {
                        //console.log(data);
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#select_dept').select2({
                placeholder: 'select access dept',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetAccessDept")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term
                        };
                    },
                    processResults: function (data) {
                        var submittedData = getSubmittedData(); // Mendapatkan data yang sudah di-submit
                        var results = data.items.map(function (item) {
                            return { id: item.id, text: item.text };
                        });

                        // Tambahkan data yang sudah di-submit ke dalam hasil
                        results.push({ id: submittedData.dept, text: submittedData.dept });

                        return {
                            results: results
                        };
                    },
                }
            });

            // Fungsi untuk mendapatkan data yang sudah di-submit
            function getSubmittedData() {
                // Lakukan Ajax untuk mendapatkan data yang sudah di-submit
                var dept = $('#select_dept').val(); // Ganti dengan cara yang sesuai untuk mendapatkan test_name
                var submittedData;

                $.ajax({
                    type: "GET",
                    url: "@Url.Action("GetSubmittedDeptData")",
                    data: {
                        dept: dept
                    },
                    async: false,  // Menambahkan opsi async: false agar fungsi ini menunggu hasil request
                    success: function (data) {
                        submittedData = data;
                    }
                });

                return submittedData;
            }

            $('#question2').select2({
                placeholder: 'select Question',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetQuestFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term,
                            //sector: 'none'
                        };
                    },
                    processResults: function (data) {
                        //console.log(data);
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#select_plant').select2({
                placeholder: 'select plant',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetPlantFilter")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term,
                            //sector: 'none'
                        };
                    },
                    processResults: function (data) {
                        //console.log(data);
                        return {
                            results: data.items
                        }
                    },
                }
            });

            $('#select_plant2').select2({
                placeholder: 'select plant',
                width: '100%',
                ajax: {
                    url: "@Url.Action("GetPlantNotAll")",
                    async: false,
                    data: function (params) {
                        return {
                            family: params.term,
                            //sector: 'none'
                        };
                    },
                    processResults: function (data) {
                        //console.log(data);
                        return {
                            results: data.items
                        }
                    },
                }
            });

            setTimeout(function () {
                $('button[name=btn_apply]').click();
            }, 1000);

            window.setTimeout(function () {
                location.reload();
            }, 900000);
        })

        $('button[name=btn_apply]').click(function () {

            floor = $("#select_floor").val();

            $("#table_details").html('');
            var table = $("#table_details");
            var table1 = $("#tbl_details_filter");
            $.ajax({
                url: "@Url.Action("GETFLOOR")",
                type: "POST",
                data: {
                    floor: floor
                },
                success: function (data) {
                    //console.log(data)
                    if (!isSearch)
                        isSearch = true;
                    else
                        table1.DataTable().destroy();
                    table.html(data);
                    table1.DataTable({
                        dom: 'lrtpi',
                        pagingType: 'numbers',
                        searching: false
                    });
                },
                complete: function () {
                    $('#spinner_loading').hide();
                }
            });
        })


        function btn_delete(id_user, sesa_id) {

            if (sesa_id == '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please Fill in All the requirement first !'
                })
            }
            else {
                Swal.fire({
                    title: 'Delete ?',
                    text: "Are you sure to Delete this Tracking ? ",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Yes!',
                    cancelButtonText: 'No!',
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        return new Promise(function (resolve, reject) {
                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("DeleteUser","ADMIN")",
                                data: {
                                    id_user: id_user,
                                    sesa_id: sesa_id
                                },
                                dataType: "json",
                                success: function () {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Success',
                                        text: 'Deleted Successfully !'
                                    })
                                    window.location.href = '@Url.Action("UserManagement","ADMIN")';
                                },
                                complete: function () {
                                    $('#spinner_loading').hide();
                                }
                            });

                        })
                    }

                })

            }
        }

        $("#delete_select").click(function () {
            var selectedIDs = new Array();
            $('input:checkbox.select_item').each(function () {
                if ($(this).prop('checked')) {
                    selectedIDs.push({ usr_id: $(this).val() });
                }
            });
            console.log(selectedIDs) //ada datanya

            if (selectedIDs.length === 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please Fill in All the requirement first !'
                })

            } else {
                Swal.fire({
                    title: 'Delete ?',
                    text: "Are you sure to Delete this Master Data ? ",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Yes!',
                    cancelButtonText: 'No!',
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("Delete_selected","Admin")",
                            data: JSON.stringify(selectedIDs),
                            dataType: "json",
                            contentType: "application/json",
                            success: function () {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: 'Delete Successfully !'
                                })
                                window.location.href = '@Url.Action("UserManagement","Admin")';
                            },
                            complete: function () {
                                $('#spinner_loading').hide();
                            }
                        });
                    }
                })
            }

        });

        function btn_edit(id_user, sesa_id, name, level, plant, id_user) {
            $('#sesa_id').val(sesa_id)
            $('#name').val(name)
            $('#plant').empty()
            getSubmittedPlant(plant);
            $('#level').empty()
            getSubmittedLevel(level);
            $('#id').val(id_user)

            $("#modal_edit").modal('show');
        }

        function getSubmittedPlant(plant) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetSubmittedPlant")",
                data: {
                    plant: plant
                },
                success: function (data) {
                    if (data.plant !== '') {
                        $('#select_plant').append(new Option(data.plant, data.plant, true, true)).trigger('change');
                    }
                }
            });
        }

        function getSubmittedLevel(level) {
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetSubmittedLevel")",
                data: {
                    level: level
                },
                success: function (data) {
                    if (data.level !== '') {
                        $('#select_level').append(new Option(data.level, data.level, true, true)).trigger('change');
                    }
                }
            });
        }

        function manageStructure() {
                // Mengarahkan ke ManageStructure controller dengan aksi Admin
                window.location.href = '/Admin/ManageStructure';
        }

        function verify_save() {
            var id_user = $('#id').val();
            var user_id = $('#user_id').val();
            var name = $('#name').val();
            var level = $("#select_level option:selected").text();
            

            if (user_id == '' || name == '' || level == '' || user_id == null || name == null || level == null) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please Fill in All the requirement first !'
                })
            }
            else {
                Swal.fire({
                    title: 'Confirm Edit ?',
                    text: "Are you sure to Confirm this Edit User Data ? ",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Yes!',
                    cancelButtonText: 'No!',
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        return new Promise(function (resolve, reject) {
                            $.ajax({
                                type: "POST",
                                url: "@Url.Action("UpdateUser","Admin")",
                                data: {
                                    id_user: id_user,
                                    user_id: user_id,
                                    name: name,
                                    level: level
                                    
                                },
                                success: function () {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Success',
                                        text: 'Edit Successfully !'
                                    })
                                    window.location.href = '@Url.Action("UserManagement","Admin")';
                                },
                                complete: function () {
                                    $('#spinner_loading').hide();
                                }
                            });

                        })
                    }

                })

            }
        }

        $("#create_Data").click(function () {
            var plant = $('#select_plant2').val();
            var floor = $('#select_floor2').val();
            var formData = new FormData();
            var fuUploadFile = document.getElementById("actual-btn");

            if (
                plant == '' || floor == ''
            ) {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Please Fill in All the requirement first!'
                })
            }
            else {
                var myFile = fuUploadFile.files[0];
                formData.append("MappingData", myFile);
                formData.append("plant", plant);
                formData.append("floor", floor);

                Swal.fire({
                    title: 'Save Mapping Data?',
                    text: "Are you sure for 'Save this Mapping Data'?",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#dc3545',
                    confirmButtonText: 'Yes!',
                    cancelButtonText: 'No!',
                    showLoaderOnConfirm: true,
                    preConfirm: function () {
                        return new Promise(function (resolve, reject) {
                            $.ajax({
                                type: "POST",
                                async: false,
                                url: "@Url.Action("AddMapping","Admin")",
                                data: formData,
                                contentType: false,
                                processData: false,
                                success: function (data) {
                                    Swal.fire(
                                        'Saved!',
                                        'Your Mapping has been Added.',
                                        'success'
                                    )
                                    window.location.href = '@Url.Action("MappingPlant","Admin")';
                                },
                                complete: function () {
                                    $('#spinner_loading').hide();
                                }
                            });

                        })
                    }
                })
            }
        })

    </script>
    <style>
            label.actual-btn {
            display: inline-block;
            background-color: #3dcd58;
            color: white;
            padding: 0.5rem;
            font-family: sans-serif;
            border-radius: 0.3rem;
            cursor: pointer;
            margin-top: 1rem;
            width: 10rem;
            text-align: center;
        }

        #file-chosen {
            margin-left: 0.3rem;
            font-family: sans-serif;
        }
        .modal-dialog {
            max-width: 110% !important;
            height: 100%;
            padding: 0;
            margin: 0;
        }

        .modal {
            padding-right: 4px !important;
            padding: .5%;
        }

        .container {
            display: block;
            position: relative;
            padding-left: 35px;
            margin-bottom: 12px;
            cursor: pointer;
            font-size: 12px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

            .carousel-control-prev-icon,
            .carousel-control-next-icon {
                width: 30px;
                height: 30px;
                background-color: transparent; /* Hapus lingkaran */
            }

            .carousel-control-prev,
            .carousel-control-next {
                width: 30px;
                z-index: 5;
            }

            .carousel-control-prev-icon:after,
            .carousel-control-next-icon:after {
                content: '‹';
                font-size: 60px;
                color: #8d00ff; /* Ubah warna simbol */
            }

            .carousel-control-next-icon:after {
                content: '›';
            }

    </style>
}



